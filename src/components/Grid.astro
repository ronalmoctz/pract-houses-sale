---
interface Props {
  id: string;
  items: Array<{ src: string; alt: string }>;
  type: "image" | "video";
  isVisible: boolean;
}

const { id, items, type, isVisible } = Astro.props;
---

<div
  id={id}
  class={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-1 transition-all duration-300 ${isVisible ? "block" : "hidden"}`}
>
  {
    items.map((item, index) => {
      // Determinar el rounded específico
      let roundedClass = "";
      if (index === 3) {
        // Imagen 4 (índice 3) - solo esquina inferior izquierda
        roundedClass = "rounded-bl-4xl";
      } else if (index === 5) {
        // Imagen 6 (índice 5) - solo esquina inferior derecha
        roundedClass = "rounded-br-4xl";
      }

      return (
        <button
          class={`gallery-item group block w-full h-48 overflow-hidden ${roundedClass} bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 `}
          type="button"
          data-type={type}
          data-index={index}
          data-src={item.src}
          data-alt={item.alt}
          aria-label={`Abrir ${type === "video" ? "video" : "imagen"} ${index + 1}: ${item.alt}`}
        >
          {type === "video" ? (
            <div class="w-full h-full flex items-center justify-center bg-black/10 group-hover:bg-black/20 transition-colors">
              <video
                src={item.src}
                class="w-full h-full object-cover"
                muted
                playsinline
                preload="metadata"
              />
              <div class="absolute inset-0 flex items-center justify-center">
                <svg
                  class="w-12 h-12 text-white/80"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path d="M6.3 2.84A1 1 0 004 3.61v12.78a1 1 0 001.6.8l10.4-6.39a1 1 0 000-1.61L6.3 2.84z" />
                </svg>
              </div>
            </div>
          ) : (
            <img
              src={item.src}
              alt={item.alt}
              class="w-full h-full object-cover"
              loading="lazy"
            />
          )}
        </button>
      );
    })
  }
</div>
